@model IList<OptimalEducation.DAL.Models.UnitedStateExam>

@{
    ViewBag.Title = "Index";
}

<h2>Результаты экзаменов ЕГЭ</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    
        <div class="form-horizontal">
            @for (int i = 0; i < Model.Count(); i++)
            {       
                @Html.ValidationSummary(true)
                @Html.HiddenFor(modelItem => Model[i].ExamDisciplineId)
                <div class="form-group">
                    @Html.LabelFor(modelItem => Model[i].Result, Model[i].Discipline.Name, new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(modelItem => Model[i].Result)
                        @Html.ValidationMessageFor(modelItem => Model[i].Result)
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Сохранить" class="btn btn-default" />
                </div>
            </div>
        </div>
}

@section Scripts {
    <script src="~/frontend/bundles/validation.js"></script>
@*<script src="~/Scripts/globalize/globalize.js"></script>
<script src="~/Scripts/globalize/cultures/globalize.culture.@(System.Threading.Thread.CurrentThread.CurrentCulture.Name).js"></script>
<script>
    $.validator.methods.number = function (value, element) {
        return this.optional(element) ||
            !isNaN(Globalize.parseFloat(value));
    }
    $(document).ready(function () {
        Globalize.culture('@(System.Threading.Thread.CurrentThread.CurrentCulture.Name)');
    });
</script>
<script>
    jQuery.extend(jQuery.validator.methods, {
        range: function (value, element, param) {
            //Use the Globalization plugin to parse the value
            var val = Globalize.parseFloat(value);
            return this.optional(element) || (
                val >= param[0] && val <= param[1]);
        }
    });
    $.validator.methods.date = function (value, element) {
        return this.optional(element) ||
            Globalize.parseDate(value) ||
            Globalize.parseDate(value, "yyyy-MM-dd");
    }
</script>*@
}


